list.file()
list.files()
list.files()
tb = read.table("Scere20170205.txt", header=T, sep="\t")
list.files()
tb = read.table("Scere20170205.txt", header=T, sep="\t", row.names=NULL)
View(tb)
head(tb)
str(tb)
View(tb)
list.files()
tb = read.table("Scere20170205.txt", header=T, sep="\t", row.names=NA)
list.files()
tb = read.table("Scere20170205.txt", header=T, sep="\t", row.names=NULL)
View(tb)
list.files()
#tb = read.table("Scere20170205.txt", header=T, sep="\t", row.names=NULL)
tb = read.table("Scere20170205.csv")
list.files()
#tb = read.table("Scere20170205.txt", header=T, sep="\t", row.names=NULL)
tb = read.table("Scere20170205.csv")
list.files()
#tb = read.table("Scere20170205.txt", header=T, sep="\t", row.names=NULL)
tb = read.table("Scere20170205.csv")
list.files()
library(xlsx)
library(rJava)
install.packages("rJava")
list.files()
library(xlsx)
library(rJava)
install.packages("xlsx")
list.files()
library(xlsx)
list.files()
library(xlsx)
list.files()
library(xlsx)
list.files()
library(xlsx)
list.files()
library(xlsx)
list.files()
#library(xlsx)
tb = read.table("Scere20170205.txt", header=T, sep="\t", row.names=NULL)
#tb = read.xlsx("Scere20170205.xlsx", 1)
View(tb)
#for( i in 1:length(tb[,1])) {
for( i in 1:19) {
pair = c(big2small(tb[i, 1], tb[i, 2])
tb$pairID[i] = paste( pair[1], pair[2], sep = "::")
#for( i in 1:length(tb[,1])) {
for( i in 1:19) {
pair = big2small(tb[i, 1], tb[i, 2])
tb$pairID[i] = paste( pair[1], pair[2], sep = "::")
}
big2small = function(char1, char2) {
if ( char1 > char2) {
return( c( char1, char2) )
} else {
return( c(char2, char1) )
}
}
#for( i in 1:length(tb[,1])) {
for( i in 1:19) {
pair = big2small(tb[i, 1], tb[i, 2])
tb$pairID[i] = paste( pair[1], pair[2], sep = "::")
}
#for( i in 1:length(tb[,1])) {
for( i in 1:19) {
pair = big2small(as.character(tb[i, 1]), as.character(tb[i, 2]))
tb$pairID[i] = paste( pair[1], pair[2], sep = "::")
}
for( i in 1:length(tb[,1])) {
#for( i in 1:19) {
pair = big2small(as.character(tb[i, 1]), as.character(tb[i, 2]))
tb$pairID[i] = paste( pair[1], pair[2], sep = "::")
}
View(tb)
unique_EEpairs = unique(tEE$pairID)
unique_EEpairs = unique(tb$pairID)
all_names = c();
for( pair in unique_EEpairs) {
all_names = c(all_names, unlist( strsplit(pair, split="::") ))
}
degreeEE = table(all_names)
str(degreeEE)
mean(degreeEE)
degree = table(all_names)
str(degree)
mean(degree)
median(degree)
